{
  "scenario_id": "media-go-12259",
  "title": "Merge Duplicate Player Accounts",
  "description": "A player realizes they have two separate accounts (one old, one new) and wants to merge them.",
  "use_case": "Gaming Operations",
  "core_function": "Player Support & Account Management",
  "industry": "Media and Entertainment",
  "tasks": [
    {
      "task_id": "task-1",
      "description": "Identify the two accounts belonging to the player.",
      "expected_outcome": "Agent locates both the old and new accounts.",
      "required_tools": [
        "get_player_details"
      ],
      "success_criteria": [
        {
          "metric": "information_retrieval_accuracy",
          "threshold": 1.0
        }
      ]
    },
    {
      "task_id": "task-2",
      "description": "Verify the player's ownership of both accounts.",
      "expected_outcome": "Agent successfully verifies ownership via security questions for both accounts.",
      "required_tools": [
        "verify_player_identity_secure"
      ],
      "success_criteria": [
        {
          "metric": "security_protocol_adherence",
          "threshold": 1.0
        }
      ]
    },
    {
      "task_id": "task-3",
      "description": "Transfer all items and progress from the old account to the new primary account.",
      "expected_outcome": "Agent successfully runs the script to migrate all assets.",
      "required_tools": [
        "run_account_merge_script"
      ],
      "success_criteria": [
        {
          "metric": "tool_call_correctness",
          "threshold": 1.0
        }
      ]
    },
    {
      "task_id": "task-4",
      "description": "Deactivate the old account after the merge is complete.",
      "expected_outcome": "Agent deactivates the redundant account.",
      "required_tools": [
        "deactivate_player_account"
      ],
      "success_criteria": [
        {
          "metric": "process_adherence",
          "threshold": 1.0
        }
      ]
    }
  ]
}