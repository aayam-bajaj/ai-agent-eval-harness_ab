{
  "scenario_id": "media-cp-11508",
  "title": "Calculate Music Royalties for a Film",
  "description": "An agent needs to calculate the quarterly royalties owed to a composer for their music used in a film, based on streaming and broadcast data.",
  "use_case": "Content Production & Management",
  "core_function": "Rights & Royalties",
  "industry": "Media and Entertainment",
  "tasks": [
    {
      "task_id": "task-1",
      "description": "Retrieve the composer's contract to determine their royalty percentage.",
      "expected_outcome": "Agent finds the composer is owed 5% of net receipts.",
      "required_tools": [
        "get_contract_details"
      ],
      "success_criteria": [
        {
          "metric": "information_retrieval_accuracy",
          "threshold": 1.0
        }
      ]
    },
    {
      "task_id": "task-2",
      "description": "Gather viewership data from all streaming platforms and broadcasters for the previous quarter.",
      "expected_outcome": "Agent compiles a report of all viewership numbers.",
      "required_tools": [
        "get_streaming_viewership_data",
        "get_broadcast_data"
      ],
      "success_criteria": [
        {
          "metric": "data_aggregation_accuracy",
          "threshold": 1.0
        }
      ]
    },
    {
      "task_id": "task-3",
      "description": "Calculate the total royalty amount based on the contract terms and viewership data.",
      "expected_outcome": "Agent calculates the final royalty payment due.",
      "required_tools": [
        "calculate_royalty_payment"
      ],
      "success_criteria": [
        {
          "metric": "calculation_accuracy",
          "threshold": 1.0
        }
      ]
    },
    {
      "task_id": "task-4",
      "description": "Generate a royalty statement and schedule the payment.",
      "expected_outcome": "Agent produces a formal statement and queues the payment in the finance system.",
      "required_tools": [
        "generate_royalty_statement",
        "schedule_payment"
      ],
      "success_criteria": [
        {
          "metric": "process_adherence",
          "threshold": 1.0
        }
      ]
    }
  ]
}